-- title: ZYXIT
-- author: Movie Vertigo
-- desc: 3D mathematical playground
-- script: lua
-- input: mouse
-- saveid: ZYXIT

local dragSpeed = 0.05
local damping = 0.05
local scaleDefault = 100
local scaleMin = 50
local scaleMax = 300
local scaleChange = 0.04
local scaleDamping = 0.1
local distance = 24
local autoRepeatDelay = 20
local autoRepeatTime = 4
local textRegionHeight = 7
local scrollMargin = 25
local textColour = 15
local textBrightness = 0x33

local screenWidth = 240
local screenHeight = 136
local halfScreenWidth = screenWidth/2
local halfScreenHeight = screenHeight/2

local examples = {
    "sin(t-hypot(x-7.5,y-7.5,z-7.5))",
    "max(0,5+4*sin(t)-hypot(x-7.5,y-7.5,z-7.5))",
    "-.5/(hypot(x-t%10,y-t%8,z-t%12)-t%2*16)",
    "sin(max(0,8-hypot(sin(t+z)+x-7.5,sin(t+x)+y-7.5,sin(t+y)+z-7.5))^2)",
    ".025/sin(t+(x~y~z|t//1))",
    "sin(z/8+3*atan2(y-7.5,x-7.5)+t)",
    "min(0,hypot(x-8+sin(t),y-16+abs(sin(t*2))*9,z-3*abs(t*7%10-5))-3)",
    "min(0,((hypot(x-7.5,y-7.5)-5)^2+(z-8)^2)-5+sin(t*2)*5)",
    "max(-0.05,1.5-abs(sin(x+t*4)+cos(y+t*4)+7.5-z))",
    "sin(x+y+t+sin(z+t*4))",
    "sin(x/5.1)+sin(y/5.1)+sin(z/5.1)-sin(t*2)*2-1",
    "min(0,y-0.2-tan(tan(sin(x/5)*sin(z/5)*sin(y/5-t*1.5))))",
    "max(0,-y+0.2+tan(tan(sin(x/2.5)*sin(z/2.5)*sin(z/5+y/5-t*1.5))))",
    "max(0,1-(x~y~min(z,sin(t*2)*8+8)//1))",
    "0.4/atan(x+y+z-22.5-sin(t)*24)",
    "hypot(x-7.5,y-7.5,z-7.5)-sin(t*1.1+x)+sin(t*1.2+y)+sin(t*1.3+z)-8",
    "x%5*y%5*z%5*sin(t*sign(x%10-5)*sign(y%10-5)*sign(z%10-5)+.8)",
    "tan(t/40+x*y*z+i)/999",
    "tan(t/4+(x~y~z))/99",
    "-.2/(hypot((x-7.5)*sin(t),(y-7.5)*sin(t),z-7.5)-8)",
    "max(0,1-abs(hypot(x-7,y-7,z-7)-7))/9/sin(atan2(x-7,y-7)+sin(t)*4)",
    "max(0,1-abs(hypot(x-7,y-7)-7))*.2/(z-7.5)/sin(atan2(x-7,y-7)+t*4)",
    "(x~y~z<1 and 1or x~y~z>14 and -1or 0)*sin(t*2+hypot(x-7,y-7,z-7))",
}

local sin, cos, sqrt = math.sin, math.cos, math.sqrt

function math.hypot(...)
    local sum = 0
    for i=1, select('#', ...) do
        local v = select(i, ...)
        sum = sum + v * v
    end
    return sqrt(sum)
end

function math.sign(x)
    return x > 0 and 1 or (x < 0 and -1 or 0)
end

local mathFuncs = [[
    local abs = math.abs
    local acos = math.acos
    local asin = math.asin
    local atan = math.atan
    local atan2 = math.atan2
    local ceil = math.ceil
    local cos = math.cos
    local cosh = math.cosh
    local deg = math.deg
    local exp = math.exp
    local floor = math.floor
    local fmod = math.fmod
    local frexp = math.frexp
    local ldexp = math.ldexp
    local log = math.log
    local log10 = math.log10
    local max = math.max
    local min = math.min
    local modf = math.modf
    local pi = math.pi
    local pow = math.pow
    local rad = math.rad
    local sign = math.sign
    local sin = math.sin
    local sinh = math.sinh
    local sqrt = math.sqrt
    local tan = math.tan
    local tanh = math.tanh
    local hypot = math.hypot
]]

local exampleIndex = 1
local input = examples[exampleIndex]
local cursorIndex = #input
local selectIndex = cursorIndex
local cursorX = -1
local textX = 0
local textDirty = true
local flashTime = 0
local modifiedTime = 0
local buttonWasDown = false
local startedOnText = false
local keyTable = {}
local clipboard = ""
local history = {}
local historyIndex = 0

local function compileFunc(str)
    local fn = load(mathFuncs.." return function(z,y,x,i,t) return "..str.." end")
    if fn then
        return fn()
    else
        return function(z,y,x,i,t) return 0 end
    end
end

local newFunc = compileFunc(input)

local identity = { 1,0,0, 0,1,0, 0,0,1 }
local rotation = identity

local function makeRotMat(x, y, z)
    local sx, cx, sy, cy, sz, cz = sin(x), cos(x), sin(y), cos(y), sin(z), cos(z)
    return { cz*cx,cz*sx*sy-sz*cy,cz*sx*cy+sz*sy, sz*cx,sz*sx*sy+cz*cy,sz*sx*cy-cz*sy, -sx,cx*sy,cx*cy }
end

local function mulMatMat(a, b)
    local result = {}
    for i = 0,2 do
        for j = 0,2 do
            local sum = 0
            for k = 0,2 do
                sum = sum + a[i*3+k+1] * b[k*3+j+1]
            end
            result[i*3+j+1] = sum
        end
    end
    return result
end

local oldTime = time()
local oldMouseX, oldMouseY, newMouseX, newMouseY, mouseZ = 0, 0, 0.5/dragSpeed, 0.25/dragSpeed, 0
local dragX, dragY, dragZ = oldMouseX - newMouseX, newMouseY - oldMouseY, mouseZ
local dragging = false
local targetScale = scaleDefault
local scale = targetScale

function controls()
    local x, y, left, middle, right, scrollx, scrolly = mouse()
    if left and not startedOnText then
        if x >= 0 and x < screenWidth and y >= 0 and y < screenHeight then
            if not dragging then
                dragging = true
                oldMouseX = x
                oldMouseY = y
            end
            newMouseX = x
            newMouseY = y
        end
    elseif right then
        if x >= 0 and x < screenWidth and y >= 0 and y < screenHeight then
            if not dragging then
                dragging = true
                oldMouseX = x
                oldMouseY = y
                newMouseX = x
                newMouseY = y
            end
            local delta = math.atan2(oldMouseX - halfScreenWidth, oldMouseY - halfScreenHeight) - math.atan2(x - halfScreenWidth, y - halfScreenHeight)
            if delta < -math.pi then
                delta = delta + 2*math.pi
            elseif delta > math.pi then
                delta = delta - 2*math.pi
            end
            mouseZ = mouseZ + screenWidth * delta / (2*math.pi)
            oldMouseX = x
            oldMouseY = y
            newMouseX = x
            newMouseY = y
    end
    else
        if dragging then
            oldMouseX = newMouseX
            oldMouseY = newMouseY
            mouseZ = 0
            dragging = false
        end
    end
    if scrolly > 0 then
        targetScale = targetScale * (1 + scaleChange * scrolly)
        if targetScale > scaleMax then targetScale = scaleMax end
    elseif scrolly < 0 then
        targetScale = targetScale / (1 - scaleChange * scrolly)
        if targetScale < scaleMin then targetScale = scaleMin end
    end
    if middle then
        targetScale = scaleDefault
    end
end

local function updateTextBox()
    local mouseX, mouseY, leftButton = mouse()
    local modified = false
    local historyOp = false
    vbank(0)
    if leftButton and not buttonWasDown then
        startedOnText = mouseY >= screenHeight - textRegionHeight
    end
    if leftButton then
        if startedOnText then
            local oldDistance = 1e308
            for i = 0, #input do
                local distance = textX + print(input:sub(1, i), 0, -8, 0, false, 1, true) - mouseX
                if distance > 0 then
                    if distance <= oldDistance then
                        cursorIndex = i
                    else
                        cursorIndex = i - 1
                    end
                    textDirty = true
                    break
                elseif i == #input then
                    cursorIndex = i
                    textDirty = true
                else 
                    oldDistance = -distance
                end
            end
            if not buttonWasDown then selectIndex = cursorIndex end
        end
        buttonWasDown = true
    else
        buttonWasDown = false
    end    
    if key() and not (leftButton and startedOnText) then
        local oldState = {input, cursorIndex, selectIndex}
        for i = 1, #keyTable do
            if not key(63) and keyTable[i][1] < 128 ~= key(64) and keyp(keyTable[i][1]%128, autoRepeatDelay, autoRepeatTime) then
                local posA = cursorIndex < selectIndex and cursorIndex or selectIndex
                local posB = cursorIndex > selectIndex and cursorIndex or selectIndex
                input = input:sub(1, posA)..keyTable[i][2]..input:sub(posB+1, #input)
                cursorIndex = posA + 1
                modified = true
            end
        end

        if key(63) then
            local posA = cursorIndex < selectIndex and cursorIndex or selectIndex
            local posB = cursorIndex > selectIndex and cursorIndex or selectIndex
            if keyp(22, autoRepeatDelay, autoRepeatTime) then
                input = input:sub(1, posA)..clipboard..input:sub(posB+1, #input)
                cursorIndex = posA + #clipboard
                modified = true
            elseif cursorIndex ~= selectIndex and keyp(3, autoRepeatDelay, autoRepeatTime) then
                clipboard = input:sub(posA+1, posB)
            end
        end

        if cursorIndex ~= selectIndex and (keyp(51, autoRepeatDelay, autoRepeatTime) or keyp(52, autoRepeatDelay, autoRepeatTime) or (key(63) and keyp(24, autoRepeatDelay, autoRepeatTime))) then
            local posA = cursorIndex < selectIndex and cursorIndex or selectIndex
            local posB = cursorIndex > selectIndex and cursorIndex or selectIndex
            if key(63) and keyp(24, autoRepeatDelay, autoRepeatTime) then clipboard = input:sub(posA+1, posB) end
            input = input:sub(1, posA)..input:sub(posB+1, #input)
            cursorIndex = posA
            modified = true
        else
            if keyp(51, autoRepeatDelay, autoRepeatTime) and cursorIndex > 0 then input = input:sub(1, cursorIndex-1)..input:sub(cursorIndex+1, #input); cursorIndex = cursorIndex - 1; modified = true end
            if keyp(52, autoRepeatDelay, autoRepeatTime) and cursorIndex < #input then input = input:sub(1, cursorIndex)..input:sub(cursorIndex+2, #input); modified = true end
        end

        if keyp(56, autoRepeatDelay, autoRepeatTime) then cursorIndex = 0; textDirty = true end
        if keyp(57, autoRepeatDelay, autoRepeatTime) then cursorIndex = #input; textDirty = true end
        if not key(64) and not modified and not textDirty and cursorIndex ~= selectIndex then
            if keyp(60, autoRepeatDelay, autoRepeatTime) then cursorIndex = cursorIndex < selectIndex and cursorIndex or selectIndex; textDirty = true end
            if keyp(61, autoRepeatDelay, autoRepeatTime) then cursorIndex = cursorIndex > selectIndex and cursorIndex or selectIndex; textDirty = true end
        else
            if keyp(60, autoRepeatDelay, autoRepeatTime) then cursorIndex = cursorIndex - 1; textDirty = true end
            if keyp(61, autoRepeatDelay, autoRepeatTime) then cursorIndex = cursorIndex + 1; textDirty = true end
        end

        if cursorIndex < 0 then cursorIndex = 0 end
        if cursorIndex > #input then cursorIndex = #input end

        if modified or (textDirty and not key(64)) then selectIndex = cursorIndex end

        if key(63) then
            if keyp(1, autoRepeatDelay, autoRepeatTime) then cursorIndex = 0; selectIndex = #input; textDirty = true end

            if not key(64) and keyp(26, autoRepeatDelay, autoRepeatTime) then
                if historyIndex > 1 then
                    historyIndex = historyIndex - 1
                    input, cursorIndex, selectIndex = history[historyIndex][1], history[historyIndex][2], history[historyIndex][3]
                    modified = true; historyOp = true
                end
            end

            if (key(64) and keyp(26, autoRepeatDelay, autoRepeatTime)) or keyp(25, autoRepeatDelay, autoRepeatTime) then
                if historyIndex < #history then
                    historyIndex = historyIndex + 1
                    input, cursorIndex, selectIndex = history[historyIndex][1], history[historyIndex][2], history[historyIndex][3]
                    modified = true; historyOp = true
                end
            end
        end

        if keyp(55, autoRepeatDelay, autoRepeatTime) or keyp(59, autoRepeatDelay, autoRepeatTime) then
            exampleIndex = (exampleIndex % #examples) + 1
            input = examples[exampleIndex]; cursorIndex = #input; selectIndex = cursorIndex
            modified = true; historyOp = true; history = {}; historyIndex = 0
        end
        if keyp(54, autoRepeatDelay, autoRepeatTime) or keyp(58, autoRepeatDelay, autoRepeatTime) then
            exampleIndex = (exampleIndex - 2) % #examples + 1
            input = examples[exampleIndex]; cursorIndex = #input; selectIndex = cursorIndex
            modified = true; historyOp = true; history = {}; historyIndex = 0
        end

        if modified and not historyOp then
            if historyIndex < #history then for i = historyIndex+1, #history do table.remove(history) end end
            if #history == 0 then
                history[#history+1] = oldState
            end
            history[#history][2], history[#history][3] = oldState[2], oldState[3]
            history[#history+1] = {input, cursorIndex, selectIndex}
            historyIndex = #history
        end
    end
    if textDirty or modified then
        cls(0)
        local textWidth = print(input, 0, -8, 0, false, 1, true) + 1
        local cursorDistance = print(input:sub(1, cursorIndex), 0, -8, 0, false, 1, true)
        local selectDistance = print(input:sub(1, selectIndex), 0, -8, 0, false, 1, true)
        if textWidth < screenWidth then
            textX = halfScreenWidth - textWidth/2
        else
            cursorX = textX + cursorDistance
            if cursorX > screenWidth - scrollMargin and (not leftButton or cursorIndex ~= selectIndex) then textX = textX - cursorX + screenWidth - scrollMargin end
            if cursorX < scrollMargin and (not leftButton or cursorIndex ~= selectIndex) then textX = textX - cursorX + scrollMargin end
            if textX > 0 then textX = 0 end
            if textX+textWidth < screenWidth then textX = screenWidth - textWidth end
        end
        cursorX = textX + cursorDistance
        print(input, textX+1, screenHeight-6, textColour, false, 1, true)
        flashTime = time()
        textDirty = false
        if selectIndex ~= cursorIndex then
            if selectIndex < cursorIndex then
                clip(textX+selectDistance, screenHeight-7, 1+cursorDistance-selectDistance, 7)
            elseif selectIndex > cursorIndex then
                clip(cursorX, screenHeight-7, 1+selectDistance-cursorDistance, 7)
            end
            cls(textColour)
            print(input, textX+1, screenHeight-6, 0, false, 1, true)
            clip()
        end
    end
    if selectIndex == cursorIndex then line(cursorX, screenHeight-7, cursorX, screenHeight, ((time()-flashTime)//500)%2 == 0 and textColour or 0) end
    vbank(1)

    return modified
end

local function testNewFunc()
    local total = 0
    local i = 0
    for z = 0, 15 do
        for y = 0, 15 do
            for x = 0, 15 do
                if newFunc(z,y,x,i,i*0.1) > 0 then total = total + 1 end
                i = i + 1
            end
        end
    end
end

local function createKeyTable()
    keyTable = {
        {128+27,")"},{128+28,"!"},{128+32,"%"},{128+33,"^"},{128+34,"&"},{128+35,"*"},{128+36,"("},{37,"-"},{38,"="},
        {128+38,"+"},{128+41,"|"},{42,";"},{128+44,"~"},{45,","},{128+45,"<"},{46,"."},{128+46,">"},{47,"/"},{47+128,"?"},{48," "},
        {89,"+"},{90,"-"},{91,"*"},{92,"/"},{94,"."}
    }
    for i = 1, 26 do keyTable[#keyTable+1] = {i, string.char(96+i)}; keyTable[#keyTable+1] = {128+i, string.char(96+i)} end
    for i = 27, 36 do keyTable[#keyTable+1] = {i, string.char(21+i)} end
    for i = 79, 88 do keyTable[#keyTable+1] = {i, string.char(i-31)} end
end

function BOOT()
    cls(0)
    for i = 0, 2 do
        poke(0x3FC0+textColour*3+i, textBrightness)
    end
    vbank(1)
    cls(0)
    createKeyTable()
end

function TIC()
    local newTime = time()
    local deltaTime = newTime - oldTime
    oldTime = newTime

    cls(0)

    if updateTextBox() then
        modifiedTime = newTime
        newFunc = compileFunc(input)
        if not pcall(testNewFunc) then newFunc = compileFunc("0") end
    end

    controls()
    dragX = (1-damping) * dragX + damping * (oldMouseX - newMouseX)
    dragY = (1-damping) * dragY + damping * (newMouseY - oldMouseY)
    dragZ = (1-damping) * dragZ + damping * (mouseZ)
    scale = (1-scaleDamping) * scale + scaleDamping * targetScale
    local rotSpeed = dragSpeed * deltaTime * 0.001
    rotation = mulMatMat(makeRotMat(dragX * rotSpeed, dragY * rotSpeed, dragZ * rotSpeed), rotation)

    local r1 = rotation[1]; local r2 = rotation[2]; local r3 = rotation[3]
    local r4 = rotation[4]; local r5 = rotation[5]; local r6 = rotation[6]
    local r7 = rotation[7]; local r8 = rotation[8]; local r9 = rotation[9]
    local rotx = -7.5*r1 -7.5*r2 -7.5*r3
    local roty = -7.5*r4 -7.5*r5 -7.5*r6
    local rotz = -7.5*r7 -7.5*r8 -7.5*r9 + distance
    r3 = r3 - r2*16; r2 = r2 - r1*16
    r6 = r6 - r5*16; r5 = r5 - r4*16
    r9 = r9 - r8*16; r8 = r8 - r7*16

    local t = (newTime-modifiedTime)/1000
    local i = 0
    for z = 0, 15 do
        for y = 0, 15 do
            for x = 0, 15 do
                local result = newFunc(z,y,x,i,t)
                if result > 1 then result = 1 elseif result < -1 then result = -1 end
                i = i + 1

                local r = scale/rotz
                local px = halfScreenWidth + rotx * r
                local py = halfScreenHeight + roty * r
                r = r * result * 0.53333333 -- 0.5 * 16/15
                local pxl = px-r
                local pxr = px+r
                local pyt = py-r
                local pyb = py+r

                if result < 0 then
                    ttri(pxl,pyt,pxr,pyt,pxl,pyb,16,0,32,0,16,16,0,0,rotz,rotz,rotz)
                    ttri(pxr,pyb,pxl,pyb,pxr,pyt,32,16,16,16,32,0,0,0,rotz,rotz,rotz)
                else
                    ttri(pxl,pyt,pxr,pyt,pxl,pyb,0,0,16,0,0,16,0,0,rotz,rotz,rotz)
                    ttri(pxr,pyb,pxl,pyb,pxr,pyt,16,16,0,16,16,0,0,0,rotz,rotz,rotz)
                end

                rotx = rotx + r1
                roty = roty + r4
                rotz = rotz + r7
            end
            rotx = rotx + r2
            roty = roty + r5
            rotz = rotz + r8
        end
        rotx = rotx + r3
        roty = roty + r6
        rotz = rotz + r9
    end
    trace((math.floor(1000*(time() - newTime))/1000).."ms ", 0, 0)
end

-- <TILES>
-- 000:0000099900099aaa0099aabb099abbcc09abbcdd9aabcdde9abcddee9abcdeef
-- 001:99900000aaa99000bbaa9900ccbba990ddcbba90eddcbaa9eeddcba9feedcba9
-- 002:0000011100011222001122330112334401233455122345561234556612345667
-- 003:1110000022211000332211004433211055433210655432216655432176654321
-- 016:9abcdeef9abcddee9aabcdde09abbcdd099abbcc0099aabb00099aaa00000999
-- 017:feedcba9eeddcba9eddcbaa9ddcbba90ccbba990bbaa9900aaa9900099900000
-- 018:1234566712345566122345560123345501123344001122330001122200000111
-- 019:7665432166554321655432215543321044332110332211002221100011100000
-- </TILES>

-- <SCREEN>
-- 011:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009909bdb9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009bcb9aa9da000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000adedacdb99000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cb9a9edbefda0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 016:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000beeabdb9ab9caa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 017:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d00adc9dfcbdecadca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 018:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009d00e990bcabdecdfeb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 019:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000900cc0baab9bada00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 020:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000310000001000000aed9ced9900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 021:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000613211643530001009d000aa0bec9900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 022:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003132117245311743530000000b0009a9dc90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 023:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042313614421663553117502240000000e0ceea0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 024:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000121251342361343116624423156100700bb00acb90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 025:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001213623235623225612321466412131220000000d9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 026:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010413324612125612213561232143531255203200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 027:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a0ac00423235525635325635411673453215752226322200100dc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 028:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cbceb9223146446353157131147134314675133131552156610300a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 029:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bcbeebd12246151441475134474225356123212355315753122213200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 030:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009daadd1151213532662242625352552151256522466413252354147500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 031:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bd9ed932314634751225143343263613431367613325354321476221332000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 032:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009deca2324615712445262254756111325712321235542115512323153166100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 033:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bdaa115615131173511262622446154114624543246652321425642175221210000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 034:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ceb223135347353135214435601c041343136761221542123136752323152650000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 035:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a91324615741313542152551da15c392565222113553125561122131642163310000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 036:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009e04115123143363142b5cd99cacb52e2462454324665222332354316752312630000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 037:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022145256142514b12e999adc9cfd4123213565424665255313576413142532133000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 038:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002256266333224234792addbbe9a9cac256511165133243112521165415317635316100000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 039:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000031113243243634253abdad9ba9ce151f251244312355421146134431276412126411500000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 040:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001255365253614139f9a9ac9bed9df1513312356522466524431245542225315225314100000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 041:000000000000000000000000000000000000000000000000000000000000000000000000000000000000003536625522431a951bdbbdb99eabacbd35532467632355426653256652542276352164410000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 042:0000000000000000000000000000000000000000000000000000000000000000000000000000000000004123224216751411bdaceaa99cbace34c146612216523213246751221531653214263422620000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 043:00000000000000000000000000000000000000000000000000000000000000000000000000000000000141565474625352c5dca9addadedadf562221134431246521331232443121653631552644110000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 044:0000000000000000000000000000000000000000000000000000000000000000000000000000000000231152224252156cabace9ce99d9aba9213431245542257633554214665233142741325536320000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 045:0000000000000000000000000000000000000000000000000000000000000000000000000000000002214425515362499adeadbaa9bcbad232135651356653135424665314675265321536613316351000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 046:00000000000000000000000000000000000000000000000000000000000000000000000000000000256366365121156ddaebb9bdcbdedb1464136761115542412211165313553176423115456241141000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 047:00000000000000000000000000000000000000000000000000000000000000000000000000000005222123113566134acbaddadfebd53a1561221123431432315233214123221215326311145163422000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 048:000000000000000000000000000000000000000000000000000000000000000000000000000000132452563462245b2cfdbeaa9acca3122113443235652115741355422256424431215263211452633000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 049:000000000000000000000000000000000000000000000000000000000000000000000000000000463672552417539eababaadd9c1191355135665246763143532566531367525642112153342125424100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 050:000000000000000000000000000000000000000000000000000000000000000000000000000033121343341652202ab9cecbee9255225661357652356521671325665312453167531314b5124644122100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 051:000000000000000000000000000000000000000000000000000000000000000000000000000132462565573146999de9ded253936632566114654113431156512bca4256221221421523d1511266252100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 052:000000000000000000000000000000000000000000000000000000000000000000000000000362112115311611bb3bd262b361121233213443113431113321139dfc213412343231531612237133152300000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 053:0000000000000000000000000000000000000000000000000000000000000000000000000001213414533536551162dc311d23322455324554225652135531356bdb11563356531311aea5612512221200000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 054:000000000000000000000000000000000000000000000000000000000000000000000000001353562675465533ae2211343245513566535665325652256751999693563524676415319ebea51355523100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 055:000000000000000000000000000000000000000000000000000000000000000000000000062573112221122023214533565256613676524554213431256659aba94256512356531641399b334625525210000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 056:00000000000000000000000000000000000000000000000000000000000000000000000004123244245135525652675356524511145531344311311222153bcdcb91243122213215333bba662411113100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 057:000000000000000000000000000000000000000000000000000000000000000000000000232514663671466251111221123311232131321221332123b9219cefeca43113454321311aecedc91224551300000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 058:0000000000000000000000000000000000000000000000000000000000000000000aa000573614662111122123313443245512565313552124554245ec429cdedca6211456541652219adbea151265141a000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 059:0000000000000000000000000000000000000000000000000000000000000000000dd000351221331341355245524561356613676414663325365246964999cdcb9763145654176364bcb996535132531b000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 060:00000000000000000000000000000000000000000000000000000000000000009900000022352351356246625662567135661356541354232566523569aabba9a95652134543165253c9dab9c11335341a900000000000000000000000000000000000000000000000000000000000000000000000000000
-- 061:000000000000000000000000000000000000000000000000000000000000000acb90000361462461367246624552456424553134321111122244aaa94abcddba9321311123212121ddb9dad9666447513ec00000000000000000000000000000000000000000000000000000000000000000000000000000
-- 062:000000000000000000000000000000000000000000000000000000000000000ceead01125135235521113222312213221233122221443134431acdcb9acdedcaa532113431454313199aa9a3614524311db00000000000000000000000000000000000000000000000000000000000000000000000000000
-- 063:000000000000000000000000000000000000000000000000000000000000990bdc900000221211331343134323543245311341532455429c659bdedc9bdefedbaaea1256525654263aecac9a313133533bda0000000000000000000000000000000000000000000000000000000000000000000000000000
-- 064:000000000000000000000000000000000000000000000000000000000009bc9ba900000131352355356135653565436752266375366653ad969bdedc9bddeedba9c91256525654263bfdadad6c6155751beb0000000000000000000000000000000000000000000000000000000000000000000000000000
-- 065:00000000000000000000000000000000000000000000000000000000000bdebedae0b04462572466367135653565425642145264245542459999cdcb1abcddba95323423211543131adb9b9a313121431bc90000000000000000000000000000000000000000000000000000000000000000000000000000
-- 066:00000000000000000000000000000000000000000000000000000000000bdeaddaa0a0224135135524542454134321232122141221443139aaaa9aa9aaa9ccb9932121c123312121aca9b9b9525535352dbd9000000000000000000000000000000000000000000000000000000000000000000000000000
-- 067:000000000000000000000000000000000000000000000000000000009a9aa999a90000001111312212222222212213431344313449abb99abccba99bccbb9a9bb94543d34553165231c9dbc9e65357513dbc9000000000000000000000000000000000000000000000000000000000000000000000000000
-- 068:00000000000000000000000000000000000000000000000000000009bdbddacb9a90001241351316242135623562356124659ba65acddbabddedbaacdedca9cedba712146764276363c9c9a9a22324321bc90000000000000000000000000000000000000000000000000000000000000000000000000000
-- 069:0000000000000000000000000000000000000000000000000000000ad9ce9cfebeae02536155126433634653467446713576bed99bdeecaceefecabdefedb9dfeca62414566426529caaab9a535133641bfb0000000000000000000000000000000000000000000000000000000000000000000000000000
-- 070:0000000000000000000000000000000000000000000000000000000ac9bd9bed9c9000013422114222523542356235612465adc99bdeecaceefecabdefedb9cedba432a345531121caecadaa5a6166151bc90000000000000000000000000000000000000000000000000000000000000000000000000000
-- 071:00000000000000000000000000000000000000000000000000000000ab9bb9aaa000000024111122112211221311234313443a944acddbabddedbaacdedca99cca912121222142142bfdaaae1a1422221db00000000000000000000000000000000000000000000000000000000000000000000000000000
-- 072:00000000000000000000000000000000000000000000000000000000000adeadda90f0413124335513541343134421221122145119abb99abccba99bccbb9ba996531134315664274adb9aa6636615523ed00000000000000000000000000000000000000000000000000000000000000000000000000000
-- 073:00000000000000000000000000000000000000000000000000000000000adebedad000037147146625653565245532453162317524665249aaaa9bb9aaa9ccba976412565267642639a9c9d99544665229000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 074:000000000000000000000000000000000000000000000000000000000009bc9baa000001313513552565357625664367521564652266529c9999cedb999deddba9da1256525653221ec9ead9e13124311c000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 075:000000000000000000000000000000000000000000000000000000000000090adda0000023122133134323541355325642135343125532aea53bdfec9bcefeeca5c921343114421132c9c9b5646134151b000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 076:000000000000000000000000000000000000000000000000000000000000000adebd00615635625621221122123311232233111221332119321acedb9bcdeedca32153111442165315a9ab9b3354662410000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 077:0000000000000000000000000000000000000000000000000000000000000000ab90000145356367257136714561256513553134431d22111159bcca9abdeddba35664224653276413ecaeaa2115341110000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 078:00000000000000000000000000000000000000000000000000000000000000000000c90001134245246135614671367625675256653245351467699579abccba99676423576426531bfdab962631255220000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 079:00000000000000000000000000000000000000000000000000000000000000000009ea00261111232233134334512565256652566533675113115135699aaaa9dba55512465323212b3b9a921535635300000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 080:000000000000000000000000000000000000000000000000000000000000000000000000151562571411222212321343135531355322564111333223ce321bdeedb33141344213164261bec26364623100000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 081:0000000000000000000000000000000000000000000000000000000000000000000000000033413513552565366441113122142332112322321114129b215bdeedb216641116542752aed9624212153500000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 082:00000000000000000000000000000000000000000000000000000000000000000000000002731112213313432553466146613671145654345431222111566abddba316621357652531bba0116424264300000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 083:000000000000000000000000000000000000000000000000000000000000000000000000001251466366151452211331355135652467614676422453135669abba94152541566522131549172247453200000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 084:00000000000000000000000000000000000000000000000000000000000000000000000000002224424514631641261b1221134323565145654236741245532999ba11365134431216321a321734225200000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 085:0000000000000000000000000000000000000000000000000000000000000000000000000000362113221121621d14dd36aa32221234323454312453112331123beda31323122153263a01471221651200000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 086:0000000000000000000000000000000000000000000000000000000000000000000000000000021453561563553109cca1e9362a4611151232155221332146712adda42513316764241145122364151000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 087:0000000000000000000000000000000000000000000000000000000000000000000000000000022221231341647549999bc9bdda35413676146764245642461113aa652135531653215315514365131200000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 088:0000000000000000000000000000000000000000000000000000000000000000000000000000000353672663241339d9cf9b9bb9b119245414566425675321452246542146641442137521217532313000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 089:000000000000000000000000000000000000000000000000000000000000000000000000000000001134145246467545acbbeead9aad522233455324564222663134431335532116541314644326522000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 090:000000000000000000000000000000000000000000000000000000000000000000000000000000002111322144122215ddaabbacecbd53b151233113443141341512216512215316541552631652423000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 091:00000000000000000000000000000000000000000000000000000000000000000000000000000000002325526623364246abeadca99bcba146414676115665232321566532466425433163213152232000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 092:000000000000000000000000000000000000000000000000000000000000000000000000000000000004222122111532264aa9bd9ce99d9a12113565135765224652355322466422214252276231140000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 093:00000000000000000000000000000000000000000000000000000000000000000000000000000000000014546537561551cb2aca9accadedadf41232124654225763233211244211675226425216310000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 094:000000000000000000000000000000000000000000000000000000000000000000000000000000000000011243253261516129aacdc9eabaace45111613443113542211265122153264217522525250000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 095:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000035261155225522b419baadc9ce9a91a14664116761225531554225664232531311632100000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 096:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001145156345616536ea9eab9bdc9ced52442246653246642443124553217641152421500000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 097:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000114223121133431369e9d99adac152115135542246642113542331426531163252100000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 098:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035146526336624326babcaddabeda25612226124421312332357631214242152000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 099:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111243263261165121b6afaabadb313431356541166524421246521665225322000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 100:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cb1444662512211532153973dd1233a146245431466521134123213153115264000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 101:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d1124336516536625411112621b91146522216355313156111175221522100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 102:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000dd911113255334526515566156414613253566122165212142564256526510000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 103:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099deb134365361223764444616321311462355314675211331232414313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 104:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cdafc9132255156313361322331141355122163553124662247621750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 105:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099eb9ec12522635247413465313156122625661221641221435411430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 106:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbceccd2225516353166114266231147134421466414631111500200dc000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 107:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009b9cdac22225515734136133136635421176244231463324510000a9000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 108:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000090003221353362541462451227135431166311740110009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 109:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001412125511735422124652321535423342000a00baa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 110:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004352213612213552321256412252006100b00adda000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 111:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000132512214613312565232522620000000d9beda000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 112:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000116352321365232515620100009900ababa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 113:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001153513261552220000e000a99beda00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 114:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001401100050000009ce9addaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 115:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f00acbaaaec9000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 116:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bd0aba99cb9dedaeec9000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 117:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab09cebbee9dedaaca0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 118:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009decadc9abaec900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 119:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ab9099eadeec900000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 120:0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000add9bccac90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 121:00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000aa9099ec90000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 122:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000acca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </SCREEN>

-- <PALETTE>
-- 000:0000007500008c0000a30000ba0000d10000e80000ff00000000007575758c8c8ca3a3a3bababad1d1d1e8e8e8ffffff
-- 001:0000007500008c0000a30000ba0000d10000e80000ff00000000007575758c8c8ca3a3a3bababad1d1d1e8e8e8ffffff
-- </PALETTE>

